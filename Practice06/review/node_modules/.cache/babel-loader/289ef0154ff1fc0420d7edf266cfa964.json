{"ast":null,"code":"import _slicedToArray from \"/Users/isabel/Desktop/WebProg2019/Practice06/review/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/isabel/Desktop/WebProg2019/Practice06/review/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport data from './data';\n\nvar FakeDatabase = function FakeDatabase() {\n  _classCallCheck(this, FakeDatabase);\n};\n\nFakeDatabase.initDatabase = function () {\n  console.log(localStorage.length);\n\n  if (localStorage.length <= 3) {\n    localStorage.clear();\n    data.posts.forEach(function (_ref) {\n      var id = _ref.id,\n          title = _ref.title,\n          author = _ref.author,\n          content = _ref.content;\n\n      FakeDatabase._add({\n        id: id,\n        title: title,\n        author: author,\n        content: content\n      });\n    });\n  }\n};\n\nFakeDatabase.getPostById = function (id) {\n  var postStr = localStorage.getItem(id.toString());\n  if (!postStr) return null;\n\n  var _postStr$split = postStr.split('|'),\n      _postStr$split2 = _slicedToArray(_postStr$split, 3),\n      title = _postStr$split2[0],\n      author = _postStr$split2[1],\n      content = _postStr$split2[2];\n\n  return {\n    id: id,\n    title: title,\n    author: author,\n    content: content\n  };\n};\n\nFakeDatabase.getAll = function () {\n  var indices = FakeDatabase.getIndices();\n  var posts = [];\n  indices.forEach(function (id) {\n    var post = FakeDatabase.getPostById(id);\n    posts.push(post);\n  });\n  return posts;\n};\n\nFakeDatabase.addPost = function (_ref2) {\n  var title = _ref2.title,\n      author = _ref2.author,\n      content = _ref2.content;\n  var id = FakeDatabase.getIndices().length.toString();\n\n  FakeDatabase._add({\n    id: id,\n    title: title,\n    author: author,\n    content: content\n  });\n};\n\nFakeDatabase.deletePost = function (id) {\n  var indices = FakeDatabase.getIndices();\n  localStorage.removeItem(id.toString());\n  localStorage.setItem('indices', indices.filter(function (ID) {\n    return ID !== id;\n  }).join('|'));\n};\n\nFakeDatabase.getIndices = function () {\n  return localStorage.getItem('indices').split('|').filter(function (str) {\n    return str;\n  });\n};\n\nFakeDatabase._add = function (_ref3) {\n  var id = _ref3.id,\n      title = _ref3.title,\n      author = _ref3.author,\n      content = _ref3.content;\n  var indicesStr = localStorage.getItem('indices');\n  localStorage.setItem(id, \"\".concat(title, \"|\").concat(author, \"|\").concat(content));\n  localStorage.setItem('indices', (indicesStr ? indicesStr : '') + \"|\".concat(id));\n};\n\nexport default FakeDatabase;","map":{"version":3,"sources":["/Users/isabel/Desktop/WebProg2019/Practice06/review/src/fakedatabase/FakeDatabase.js"],"names":["data","FakeDatabase","initDatabase","console","log","localStorage","length","clear","posts","forEach","id","title","author","content","_add","getPostById","postStr","getItem","toString","split","getAll","indices","getIndices","post","push","addPost","deletePost","removeItem","setItem","filter","ID","join","str","indicesStr"],"mappings":"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","sourcesContent":["import data from './data'\n\nclass FakeDatabase {\n\tstatic initDatabase = () => {\n\t\tconsole.log(localStorage.length)\n\t\tif (localStorage.length <= 3) {\n\t\t\tlocalStorage.clear()\n\n\t\t\tdata.posts.forEach(({ id, title, author, content }) => {\n\t\t\t\tthis._add({ id, title, author, content })\n\t\t\t})\n\t\t}\n\t}\n\n\tstatic getPostById = id => {\n\t\tconst postStr = localStorage.getItem(id.toString())\n\t\tif (!postStr) return null\n\n\t\tconst [title, author, content] = postStr.split('|')\n\n\t\treturn { id, title, author, content }\n\t}\n\n\tstatic getAll = () => {\n\t\tconst indices = this.getIndices()\n\n\t\tconst posts = []\n\t\tindices.forEach(id => {\n\t\t\tconst post = this.getPostById(id)\n\t\t\tposts.push(post)\n\t\t})\n\n\t\treturn posts\n\t}\n\n\tstatic addPost = ({ title, author, content }) => {\n\t\tconst id = this.getIndices().length.toString()\n\n\t\tthis._add({ id, title, author, content })\n\t}\n\n\tstatic deletePost = id => {\n\t\tconst indices = this.getIndices()\n\n\t\tlocalStorage.removeItem(id.toString())\n\t\tlocalStorage.setItem('indices', indices.filter(ID => ID !== id).join('|'))\n\t}\n\n\tstatic getIndices = () =>\n\t\tlocalStorage\n\t\t\t.getItem('indices')\n\t\t\t.split('|')\n\t\t\t.filter(str => str)\n\n\tstatic _add = ({ id, title, author, content }) => {\n\t\tconst indicesStr = localStorage.getItem('indices')\n\t\tlocalStorage.setItem(id, `${title}|${author}|${content}`)\n\t\tlocalStorage.setItem('indices', (indicesStr ? indicesStr : '') + `|${id}`)\n\t}\n}\n\nexport default FakeDatabase\n"]},"metadata":{},"sourceType":"module"}