{"ast":null,"code":"import _classCallCheck from \"/Users/isabel/Desktop/WebProg2019/Practice06/review/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/isabel/Desktop/WebProg2019/Practice06/review/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/isabel/Desktop/WebProg2019/Practice06/review/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/isabel/Desktop/WebProg2019/Practice06/review/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/isabel/Desktop/WebProg2019/Practice06/review/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/isabel/Desktop/WebProg2019/Practice06/review/src/containers/Blog/Authors/Authors.js\";\nimport React, { Component } from \"react\";\nimport Post from \"../../../components/Post/Post\";\nimport Author from \"../../../components/Author/Author\";\nimport FakeDatabase from \"../../../fakedatabase/FakeDatabase\";\nimport classes from \"./Authors.module.css\";\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts(props) {\n    var _this;\n\n    _classCallCheck(this, Posts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Posts).call(this, props));\n\n    _this.postSelectedHandler = function (id) {\n      // this.props.history.push({pathname: '/posts/' + id});\n      _this.props.history.push(\"/authors/\" + id);\n    };\n\n    _this.postSelectedHandler2 = function (id) {\n      // this.props.history.push({pathname: '/posts/' + id});\n      _this.props.history.push(\"/posts/\" + id);\n    };\n\n    _this.database = new FakeDatabase();\n    return _this;\n  }\n\n  _createClass(Posts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var author = this.props.match.params.author;\n      console.log(this.props.match.params);\n      var display = null;\n\n      if (typeof author === \"string\") {\n        // const post = FakeDatabase.getPostByauthor(id);\n        // display = post ? (\n        display = FakeDatabase.getAll().filter(function (post) {\n          return post.author == author;\n        }).map(function (post, id) {\n          return React.createElement(Post, {\n            key: id,\n            title: post.title,\n            author: post.author,\n            clicked: function clicked() {\n              return _this2.postSelectedHandler2(post.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          });\n        }); // ) : (\n        //     <h1>Not found.</h1>\n        // );\n      } else {\n        var author_list = [];\n        FakeDatabase.getAll().forEach(function (post) {\n          if (post.author && author_list) author_list.push(post.author);\n        });\n        display = author_list.map(function (post, id) {\n          return React.createElement(Author, {\n            key: id,\n            title: post,\n            clicked: function clicked() {\n              return _this2.postSelectedHandler(post);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.posts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, display);\n    }\n  }]);\n\n  return Posts;\n}(Component);\n\nexport { Posts as default };","map":{"version":3,"sources":["/Users/isabel/Desktop/WebProg2019/Practice06/review/src/containers/Blog/Authors/Authors.js"],"names":["React","Component","Post","Author","FakeDatabase","classes","Posts","props","postSelectedHandler","id","history","push","postSelectedHandler2","database","author","match","params","console","log","display","getAll","filter","post","map","title","author_list","forEach","posts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;IAEqBC,K;;;;;AACjB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,UAMnBC,mBANmB,GAMG,UAAAC,EAAE,EAAI;AACxB;AACA,YAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,cAAcF,EAAtC;AACH,KATkB;;AAAA,UAYnBG,oBAZmB,GAYI,UAAAH,EAAE,EAAI;AACzB;AACA,YAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,YAAYF,EAApC;AACH,KAfkB;;AAGf,UAAKI,QAAL,GAAgB,IAAIT,YAAJ,EAAhB;AAHe;AAIlB;;;;6BAaQ;AAAA;;AAAA,UACGU,MADH,GACc,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAD/B,CACGF,MADH;AAELG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWQ,KAAX,CAAiBC,MAA7B;AACA,UAAIG,OAAO,GAAG,IAAd;;AACA,UAAI,OAAOL,MAAP,KAAiB,QAArB,EAA+B;AAE3B;AACA;AACCK,QAAAA,OAAO,GAAIf,YAAY,CAACgB,MAAb,GAAsBC,MAAtB,CAA6B,UAAAC,IAAI;AAAA,iBAAEA,IAAI,CAACR,MAAL,IAAaA,MAAf;AAAA,SAAjC,EAAwDS,GAAxD,CAA4D,UAACD,IAAD,EAAOb,EAAP;AAAA,iBACpE,oBAAC,IAAD;AACI,YAAA,GAAG,EAAEA,EADT;AAEI,YAAA,KAAK,EAAEa,IAAI,CAACE,KAFhB;AAGI,YAAA,MAAM,EAAEF,IAAI,CAACR,MAHjB;AAII,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACF,oBAAL,CAA0BU,IAAI,CAACb,EAA/B,CAAN;AAAA,aAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADoE;AAAA,SAA5D,CAAX,CAJ0B,CAW3B;AACA;AACA;AACH,OAdD,MAcO;AACH,YAAIgB,WAAW,GAAE,EAAjB;AACArB,QAAAA,YAAY,CAACgB,MAAb,GAAsBM,OAAtB,CAA8B,UAAAJ,IAAI,EAAE;AAChC,cAAGA,IAAI,CAACR,MAAL,IAAeW,WAAlB,EAA+BA,WAAW,CAACd,IAAZ,CAAiBW,IAAI,CAACR,MAAtB;AAClC,SAFD;AAGAK,QAAAA,OAAO,GAAGM,WAAW,CAACF,GAAZ,CAAgB,UAACD,IAAD,EAAOb,EAAP;AAAA,iBACtB,oBAAC,MAAD;AACI,YAAA,GAAG,EAAEA,EADT;AAEI,YAAA,KAAK,EAAEa,IAFX;AAGI,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACd,mBAAL,CAAyBc,IAAzB,CAAN;AAAA,aAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADsB;AAAA,SAAhB,CAAV;AAOH;;AAED,aACQ;AAAK,QAAA,SAAS,EAAEjB,OAAO,CAACsB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCR,OAAhC,CADR;AAGH;;;;EArD8BlB,S;;SAAdK,K","sourcesContent":["import React, { Component } from \"react\";\n\nimport Post from \"../../../components/Post/Post\";\nimport Author from \"../../../components/Author/Author\";\nimport FakeDatabase from \"../../../fakedatabase/FakeDatabase\";\nimport classes from \"./Authors.module.css\";\n\nexport default class Posts extends Component {\n    constructor(props) {\n        super(props);\n\n        this.database = new FakeDatabase();\n    }\n\n    postSelectedHandler = id => {\n        // this.props.history.push({pathname: '/posts/' + id});\n        this.props.history.push(\"/authors/\" + id);\n    };\n\n\n    postSelectedHandler2 = id => {\n        // this.props.history.push({pathname: '/posts/' + id});\n        this.props.history.push(\"/posts/\" + id);\n    };\n\n    render() {\n        const { author } = this.props.match.params;\n        console.log(this.props.match.params);\n        let display = null;\n        if (typeof(author)===\"string\") {\n\n            // const post = FakeDatabase.getPostByauthor(id);\n            // display = post ? (\n             display=   FakeDatabase.getAll().filter(post=>post.author==author).map((post, id) => (\n                <Post\n                    key={id}\n                    title={post.title}\n                    author={post.author}\n                    clicked={() => this.postSelectedHandler2(post.id)}\n                />));\n            // ) : (\n            //     <h1>Not found.</h1>\n            // );\n        } else {\n            let author_list =[];\n            FakeDatabase.getAll().forEach(post=>{\n                if(post.author && author_list) author_list.push(post.author);\n            })\n            display = author_list.map((post, id) => (\n                <Author\n                    key={id}\n                    title={post}\n                    clicked={() => this.postSelectedHandler(post)}\n                />\n            ));\n        }\n\n        return (\n                <div className={classes.posts}>{display}</div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}